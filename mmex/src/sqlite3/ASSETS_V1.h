/////////////////////////////////////////////////////
// Generated By wxActiveRecordGenerator v 1.2.0-rc3
/////////////////////////////////////////////////////


#ifndef __A_S_S_E_T_S__V1_
#define __A_S_S_E_T_S__V1_

////@@begin gen include
#include "wxActiveRecord.h"
#include <wx/wx.h>
#include <wx/string.h>
#include <wx/datetime.h>

////@@end gen include

////@@begin custom include
////@@end custom include

////@@begin gen forward
class ASSETS_V1;
class ASSETS_V1Row;
class ASSETS_V1RowSet;


////@@end gen forward

////@@begin custom forward
////@@end custom forward

////@@begin gen arClass
class ASSETS_V1: public wxSqliteActiveRecord{
protected:
	ASSETS_V1Row* RowFromResult(DatabaseResultSet* result);
public:
	ASSETS_V1();
	ASSETS_V1(const wxString& name,const wxString& server=wxEmptyString,const wxString& user=wxEmptyString,const wxString& password=wxEmptyString,const wxString& table=wxT("ASSETS_V1"));
	ASSETS_V1(DatabaseLayer* database,const wxString& table=wxT("ASSETS_V1"));
	bool Create(const wxString& name,const wxString& server=wxEmptyString,const wxString& user=wxEmptyString,const wxString& password=wxEmptyString,const wxString& table=wxT("ASSETS_V1"));
	
	ASSETS_V1Row* New();
	bool Delete(int key);

	
	ASSETS_V1Row* ASSETID(int key);

	ASSETS_V1Row* Where(const wxString& whereClause);
	ASSETS_V1RowSet* WhereSet(const wxString& whereClause,const wxString& orderBy=wxEmptyString);
	ASSETS_V1RowSet* All(const wxString& orderBy=wxEmptyString); 

////@@begin custom arClass
public:


////@@end custom arClass
};
////@@end gen arClass

////@@begin gen arRow
class ASSETS_V1Row: public wxActiveRecordRow{
public:
	ASSETS_V1Row();
	ASSETS_V1Row(const ASSETS_V1Row& src);
	ASSETS_V1Row(ASSETS_V1* activeRecord);
	ASSETS_V1Row(DatabaseLayer* database,const wxString& table=wxT("ASSETS_V1"));
	ASSETS_V1Row& operator=(const ASSETS_V1Row& src);
	bool GetFromResult(DatabaseResultSet* result);
public:
	wxString ASSETTYPE;
	wxString STARTDATE;
	int ASSETID;
	wxString NOTES;
	int VALUECHANGERATE;
	wxString ASSETNAME;
	wxString VALUECHANGE;
	int VALUE;

public:
	
	
	bool Save();
	bool Delete();
	
	
////@@begin custom arRow
public:


////@@end custom arRow	

};
////@@end gen arRow

////@@begin gen arSet
class ASSETS_V1RowSet: public wxActiveRecordRowSet{
public:
	ASSETS_V1RowSet();
	ASSETS_V1RowSet(wxActiveRecord* activeRecord);
	ASSETS_V1RowSet(DatabaseLayer* database,const wxString& table=wxT("ASSETS_V1"));
	virtual ASSETS_V1Row* Item(unsigned long item);
	
	virtual bool SaveAll();
	
	
protected:
	static int CMPFUNC_ASSETTYPE(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	static int CMPFUNC_STARTDATE(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	static int CMPFUNC_ASSETID(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	static int CMPFUNC_NOTES(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	static int CMPFUNC_VALUECHANGERATE(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	static int CMPFUNC_ASSETNAME(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	static int CMPFUNC_VALUECHANGE(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	static int CMPFUNC_VALUE(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	static int CMPFUNC_global(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	virtual CMPFUNC_proto GetCmpFunc(const wxString& var) const;

////@@begin custom arSet
public:


////@@end custom arSet
};
////@@end gen arSet

#endif /* __A_S_S_E_T_S__V1_ */