<?xml version="1.0" ?>

<!--
    MMEX build scripts.
    Copyright (C) 2009, 2010 VaDiM.

    Common templates.
-->

<makefile>

    <!-- check version of Bakefile -->
    <requires version="0.2.6"/>


    <include file="presets/wx.bkl"/>


    <set var="CAN_CONFIG">
        <!-- condition must be the same as for <include file="wx_win32.bkl"> in presets\wx\wx.bkl -->
        <if cond="FORMAT!='autoconf' and PLATFORM_WIN32=='1'">1</if>
    </set>


    <if cond="CAN_CONFIG=='1'">

        <!-- redefine defaults -->

        <set var="WX_DEBUG_DEFAULT">0</set>
        <set var="WX_UNICODE_DEFAULT">1</set>

        <if cond="FORMAT=='mingw'">
            <set var="WX_MONOLITHIC_DEFAULT">1</set>
        </if>


        <if cond="not isdefined('BOOST_DIR')">
            <set var="BOOSTDIR_DEFAULT" overwrite="0">$(DOLLAR)($(ENV_VAR)BOOSTDIR)</set>
            <option name="BOOST_DIR" category="path">
                <default-value>$(BOOSTDIR_DEFAULT)</default-value>
                <description>The directory where Boost C++ libraries is installed</description>
            </option>
        </if>


        <!-- VC++ makefile -->

        <if cond="FORMAT=='msvc'">

            <set var="VSTUDIO_VER_DEFAULT" overwrite="0">2010</set>

            <option name="VSTUDIO_VER">
                <values>2010,2008,2005,2003</values>
                <default-value>$(VSTUDIO_VER_DEFAULT)</default-value>
                <description>The version of Visual Studio</description>
            </option>

            <set var="CRT_VERSION">
                <if cond="VSTUDIO_VER=='2010'">100</if>
                <if cond="VSTUDIO_VER=='2008'">90</if>
                <if cond="VSTUDIO_VER=='2005'">80</if>
                <if cond="VSTUDIO_VER=='2003'">70</if>
            </set>

        </if>


        <!-- except VC++ IDE projects -->
        <if cond="not FORMAT.endswith('prj')">

            <option name="TARGET_CPU">

                <default-value>$(DOLLAR)(CPU)</default-value>

                <description>
The target processor architecture must be specified when it is not X86.
This does not affect the compiler output, so you still need to make sure
your environment is set up appropriately with the correct compiler in the
PATH. Accepted values: AMD64, IA64.
                </description>

            </option>

            <set var="CPU_ARCH">
                <if cond="TARGET_CPU==''">x86</if>
                <if cond="TARGET_CPU=='x86'">x86</if>
                <if cond="TARGET_CPU=='AMD64'">x64</if>
                <if cond="TARGET_CPU=='IA64'">ia64</if>
            </set>

            <!-- This variable is useful to set the BUILDDIR variable as done in presets/setbuilddir.bkl -->

            <set var="TARGETCPUPOSTFIX">-$(CPU_ARCH)</set>

        </if>


        <!-- set compiler's flags according to selected options -->

        <set var="DEBUGINFO">
            <if cond="WX_DEBUG=='1'">on</if>
            <if cond="WX_DEBUG=='0'">off</if>
        </set>

        <set var="DEBUG_DEFINE">
            <if cond="WX_DEBUG=='1'">_DEBUG</if>
            <if cond="WX_DEBUG=='0'">NDEBUG</if>
        </set>

        <set var="OPTIMIZEFLAG">
            <if cond="WX_DEBUG=='1'">off</if>
            <if cond="WX_DEBUG=='0'">speed</if>
        </set>


        <!-- This variable is useful to set the BUILDDIR variable as done in presets/setbuilddir.bkl -->

    <set var="SHAREDBUILDPOSTFIX">
            <if cond="WX_SHARED=='0'">static</if>
            <if cond="WX_SHARED=='1'">shared</if>
    </set>


    <!-- This variable is useful to set the BUILDDIR variable as done in presets/setbuilddir.bkl -->

    <set var="UNICODEBUILDPOSTFIX">
            <if cond="WX_UNICODE=='1'">u</if>
    </set>


        <!-- This variable is useful to set the BUILDDIR variable as done in presets/setbuilddir.bkl -->

        <set var="DEBUGBUILDPOSTFIX">
        <if cond="WX_DEBUG=='1'">d</if>
    </set>


        <!-- set bakefile's predefined variable BUILDDIR -->
        <include file="presets/setbuilddir.bkl"/>

    </if>


    <!-- generic compiler's flags -->

    <template id="compiler_common">

        <precomp-headers>off</precomp-headers>
        <threading>multi</threading>
        <warnings>max</warnings>
        <pic>on</pic>

        <if cond="CAN_CONFIG=='1'">
            <debug-info>$(DEBUGINFO)</debug-info>
            <debug-info-edit-and-continue>$(DEBUGINFO)</debug-info-edit-and-continue>
            <optimize>$(OPTIMIZEFLAG)</optimize>
            <define>$(DEBUG_DEFINE)</define>
        </if>

    </template>


    <include file="wxsqlite.bkl"/>
    <include file="sqlite.bkl"/>
    <include file="lua.bkl"/>


    <!-- Prepend valid lib-path if TARGET_CPU option set.
         Template "wx" sets lib-path to x86 libs (lib\vc_lib) even if x64 libs exists (lib\vc_amd64_lib).
         We should insert valid lib-path prior wrong one.
         See wxWidgets\build\bakefiles\config.bkl <== TARGET_CPU, common.bkl <== DIR_SUFFIX_CPU.
    -->

    <template id="lib_path_x64_hack">

        <if cond="CAN_CONFIG=='1' and isdefined('TARGET_CPU')">

            <set var="CPU_SUF">
                <if cond="TARGET_CPU=='AMD64'">_amd64</if>
                <if cond="TARGET_CPU=='IA64'">_ia64</if>
            </set>

            <set var="LIB_SUF">
                <if cond="WX_SHARED=='0'">_lib</if>
                <if cond="WX_SHARED=='1'">_dll</if>
            </set>

            <!-- prepend valid lib-path to x64 libs (\lib\vc_amd64_lib) -->

            <lib-path>
                $(nativePaths(WX_DIR) + '\lib' + DIRSEP + COMPILER + CPU_SUF + LIB_SUF)
            </lib-path>

        </if>

    </template>


    <!-- common part of mmex and mmex_tests -->

    <template id="mmex_common" template="lib_path_x64_hack,wx,compiler_common">

        <cxx-exceptions>on</cxx-exceptions>
        <cxx-rtti>on</cxx-rtti>

        <include cond="isdefined('BOOST_DIR')">$(BOOST_DIR)</include>
        <include>$(SRCDIR)/lib/sqlite</include>
        <include>$(SRCDIR)/lib/wxsqlite</include>
        <include>$(SRCDIR)/lib/lua/src</include>

        <!-- disable precompiled headers for wxWidgets -->
        <define>NOPCH</define>

        <library>wxsqlite</library>
        <library>sqlite</library>
        <library>lua</library>

        <!-- relative to trunk/mmex -->

        <set var="PLATF_DIR">
        <if cond="TOOLSET=='win32'">win</if>
            <if cond="TOOLSET=='unix'">unix</if>
            <if cond="1">/mac</if>
        </set>

        <headers>$(fileList( ['src/*.h', 'src/reports/*.h', 'src/db/*.h'] ))</headers>
        <sources>$(fileList( [ 'src/*.cpp', 'src/reports/*.cpp', 'src/db/*.cpp', 'src/' + PLATF_DIR + '/*.cpp' ] ))</sources>


        <!-- Microsoft compilers only, enable PDB for Release build -->

        <if cond="FORMAT.startswith('msv')">

            <!-- Program Database -->

            <set var="CL_FLAGS"><if cond="WX_DEBUG=='0'">/Zi</if></set>
            <cxxflags>$(CL_FLAGS)</cxxflags>

            <!-- /opt:ref option suppressed by using /debug linker option by default
                  but should be always enabled for release builds -->

            <set var="LINK_FLAGS"><if cond="WX_DEBUG=='0'">/DEBUG /MAP /MAPINFO:EXPORTS /OPT:REF /OPT:ICF</if></set>
            <ldflags>$(LINK_FLAGS)</ldflags>

        </if>


        <!-- Embed a manifest inside executable for VC++.
             By default, Visual Studio tries to embed the manifest when it builds a project from source files.
             However if an application is built by using nmake, some changes to the existing makefile are necessary.

             FIXME: If you are doing an incremental build, directly editing the resource as done here will disable
                    incremental building and cause a full rebuild. The possible decision described on MSDN
                    in document "How to: Embed a Manifest Inside a C/C++ Application".
    -->

        <if cond="FORMAT=='msvc'">

            <set var="TARGET_PATH">$(BUILDDIR + DIRSEP + id + EXEEXT)</set>

        <postlink-command>
            mt.exe -manifest "$(TARGET_PATH).manifest" -outputresource:"$(TARGET_PATH)";1
            </postlink-command>

    </if>


        <!-- wxWidgets libs, "base" must be last -->

        <wx-lib>core</wx-lib>
        <wx-lib>qa</wx-lib>
        <wx-lib>net</wx-lib>
        <wx-lib>html</wx-lib>
        <wx-lib>xml</wx-lib>
        <wx-lib>aui</wx-lib>
        <wx-lib>adv</wx-lib>
        <wx-lib>base</wx-lib>

    </template>


</makefile>
